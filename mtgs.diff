diff --git a/mtgs.diff b/mtgs.diff
index fbcf7b687..e69de29bb 100644
--- a/mtgs.diff
+++ b/mtgs.diff
@@ -1,49 +0,0 @@
-diff --git a/3rdparty/wil b/3rdparty/wil
---- a/3rdparty/wil
-+++ b/3rdparty/wil
-@@ -1 +1 @@
--Subproject commit 3018875eaa4f8e3d86cf2da97fd577bae59f3aec
-+Subproject commit 3018875eaa4f8e3d86cf2da97fd577bae59f3aec-dirty
-diff --git a/pcsx2/CDVD/CDVD.cpp b/pcsx2/CDVD/CDVD.cpp
-index 1bff89adc..dcf2998f9 100644
---- a/pcsx2/CDVD/CDVD.cpp
-+++ b/pcsx2/CDVD/CDVD.cpp
-@@ -81,10 +81,10 @@ static void CDVDSECTORREADY_INT(u32 eCycle)
- 	if (psxRegs.interrupt & (1 << IopEvt_CdvdSectorReady))
- 		return;
- 
--	if (EmuConfig.Speedhacks.fastCDVD)
-+	//if (EmuConfig.Speedhacks.fastCDVD)
- 	{
- 		if (eCycle < Cdvd_FullSeek_Cycles && eCycle > 1)
--			eCycle *= 0.5f;
-+			eCycle *= 0.005f;
- 	}
- 
- 	PSX_INT(IopEvt_CdvdSectorReady, eCycle);
-@@ -94,10 +94,10 @@ static void CDVDREAD_INT(u32 eCycle)
- {
- 	// Give it an arbitary FAST value. Good for ~5000kb/s in ULE when copying a file from CDVD to HDD
- 	// Keep long seeks out though, as games may try to push dmas while seeking. (Tales of the Abyss)
--	if (EmuConfig.Speedhacks.fastCDVD)
-+	//if (EmuConfig.Speedhacks.fastCDVD)
- 	{
- 		if (eCycle < Cdvd_FullSeek_Cycles && eCycle > 1)
--			eCycle *= 0.5f;
-+			eCycle *= 0.005f;
- 	}
- 
- 	PSX_INT(IopEvt_CdvdRead, eCycle);
-diff --git a/pcsx2/MTGS.cpp b/pcsx2/MTGS.cpp
-index ac5638ced..8bb6843dd 100644
---- a/pcsx2/MTGS.cpp
-+++ b/pcsx2/MTGS.cpp
-@@ -140,7 +140,7 @@ void MTGS::PostVsyncStart()
- 	// If those are needed back, it's better to increase the VsyncQueueSize via PCSX_vm.ini.
- 	// (The Xenosaga engine is known to run into this, due to it throwing bulks of data in one frame followed by 2 empty frames.)
- 
--	if (s_QueuedFrameCount++ < EmuConfig.GS.VsyncQueueSize)
-+	if (s_QueuedFrameCount++ < 0)
- 		return;
- 
- 	s_VsyncSignalListener = true;
diff --git a/pcsx2/CDVD/CDVD.cpp b/pcsx2/CDVD/CDVD.cpp
index c76eb394e..240b33a99 100644
--- a/pcsx2/CDVD/CDVD.cpp
+++ b/pcsx2/CDVD/CDVD.cpp
@@ -81,10 +81,10 @@ static void CDVDSECTORREADY_INT(u32 eCycle)
 	if (psxRegs.interrupt & (1 << IopEvt_CdvdSectorReady))
 		return;
 
-	if (EmuConfig.Speedhacks.fastCDVD)
+	//if (EmuConfig.Speedhacks.fastCDVD)
 	{
 		if (eCycle < Cdvd_FullSeek_Cycles && eCycle > 1)
-			eCycle *= 0.5f;
+			eCycle *= 0.005f;
 	}
 
 	PSX_INT(IopEvt_CdvdSectorReady, eCycle);
@@ -94,10 +94,10 @@ static void CDVDREAD_INT(u32 eCycle)
 {
 	// Give it an arbitary FAST value. Good for ~5000kb/s in ULE when copying a file from CDVD to HDD
 	// Keep long seeks out though, as games may try to push dmas while seeking. (Tales of the Abyss)
-	if (EmuConfig.Speedhacks.fastCDVD)
+	//if (EmuConfig.Speedhacks.fastCDVD)
 	{
 		if (eCycle < Cdvd_FullSeek_Cycles && eCycle > 1)
-			eCycle *= 0.5f;
+			eCycle *= 0.005f;
 	}
 
 	PSX_INT(IopEvt_CdvdRead, eCycle);
diff --git a/pcsx2/MTGS.cpp b/pcsx2/MTGS.cpp
index 7701326e2..bd5ccaf59 100644
--- a/pcsx2/MTGS.cpp
+++ b/pcsx2/MTGS.cpp
@@ -125,7 +125,7 @@ void MTGS::PostVsyncStart()
 	// If those are needed back, it's better to increase the VsyncQueueSize via PCSX_vm.ini.
 	// (The Xenosaga engine is known to run into this, due to it throwing bulks of data in one frame followed by 2 empty frames.)
 
-	if (s_QueuedFrameCount++ < EmuConfig.GS.VsyncQueueSize)
+	if (s_QueuedFrameCount++ < 0)
 		return;
 
 	s_VsyncSignalListener = true;
diff --git a/pcsx2/VMManager.cpp b/pcsx2/VMManager.cpp
index c26ffcea8..4f5f4554d 100644
--- a/pcsx2/VMManager.cpp
+++ b/pcsx2/VMManager.cpp
@@ -319,7 +319,7 @@ void VMManager::LoadPatches(const std::string& serial, u32 crc)
 
 	// regular cheat patches
 	int cheat_count = 0;
-	if (EmuConfig.EnableCheats)
+	//if (EmuConfig.EnableCheats)
 	{
 		cheat_count = LoadPatchesFromDir(crc_string, EmuFolders::Cheats, "Cheats", true);
 		if (cheat_count > 0)
